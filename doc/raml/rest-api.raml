#%RAML 1.0
title: Auto Seller Data API
version: v1-0-1
baseUri: http://m.renaijiance.com:9098/v101
protocols:
  - HTTP
description:
  - Micro-Service to ingestion auto seller data
mediaType:
  - application/json
types:
  Order:
    type: object
    properties:
      couponCode: string
      product: Product
      externalTradeNumber: string
      macineSN: string
      paidAmount: number
      paymentType: number
  Receipt:
    type: object
    properties:
      date: datetime
      operator: string
      totalAmount: number
      paidAmount: number
      orderNumber: string
      externalTradeNumber: string
      transactionType: number
      paymentType: number
      details: ReceiptDetail[]
  ReceiptDetail:
    type: object
    properties:
      itemName: string
      amount: number
  Product:
    type: object
    properties:
      name: string
      price: number
  Activity:
    type: object
    properties:
      name: string
      auid: string
      expireDate: datetime
  Coupon:
    type: object
    properties:
      id: number
      code: string
      status: number
      discountAmount: number
      product: Product
      activity: Activity
  SellerMachine:
    type: object
    properties:
      sn: string
      province: string
      city: string
      district: string
      location: string
  MachineRegistryToken:
     type: object
     properties:
       machineSN: string
       token: string
       registerTime: datetime
       status: string
  Package:
    type: object
    properties:
      sn: string
      name: string
      machine: SellerMachine
  Message:
    type: object
    properties:
      type: string
      content: string
  Page:
    description:
      standard javax page object
    type: object
    properties:
      content: object[]
      last: boolean
      totalPages: integer
      totalElements: integer
      first: boolean
      numberOfElements: integer
      size: integer
      number: integer
/api/coupons/o2o:
  description:
    Activity coupon apis
  post:
    description:
      Register a new activity coupon
    displayName: registerCoupon
    body:
      application/json:
        type: Coupon
    responses:
      200:
        body:
          application/json:
            type: Coupon
      400:
        description:
          Returns 400 as bad request when register coupon with duplicated code
        body:
          application/json:
            type: Message
  /available/{code}:
    get:
      description:
        Get coupon details with giving coupon code
      displayName: getAvailableCoupon
      responses:
        200:
          body:
            application/json:
              type: Coupon
        404:
          description:
            Returns 404 if can't find coupon with coupon code
          body:
            application/json:
              type: Message
        400:
          description:
            Returns 400 if coupon already been used or expired
          body:
            application/json:
              type: Message

/api/machines:
  description:
    Machine Data API root route
  post:
    description:
      Register machine to renai central server
    displayName: registerMachine
    body:
      application/json:
        type: SellerMachine
    responses:
      200:
        body:
          application/json:
            type: MachineRegistryToken
      500:
        body:
          application/json:
            type: Message
  /{machineSN}:
    get:
      description: Search machin by sn
      displayName: findMachinBySN
      queryParameters:
        token: string
      responses:
        200:
          body:
            application/json:
              type: SellerMachine
        500:
          body:
            application/json:
              type: Message
        403:
        404:
    /orders:
      post:
        description: Proceed transaction with specified order
        displayName: proceedOrder
        queryParameters:
          token: string
        body:
          application/json:
            type: Order
        responses:
          200:
            body:
              application/json:
                type: Receipt
          400:
            description:
              1. Machine SN doesn't match machine SN in order
              2. Token doesn't match with machine SN
              3. Coupon is invalid
          404:
            description:
              Can't find machine registry with giving machine SN
    /packages:
      /stock:
        get:
          description:
            List package in machine (has not been sold yet)
          displayName:
            getPackagesInMachine
          queryParameters:
            token: string
            page:
              description: page index
              type: integer
              required: false
              default: 0
            size:
              description: how many records display in list
              type:        integer
              required:    false
              example:     10
            sort:
              description: sort by field
              type:        string
              required:    false
              example:     "name"
            filterFields:
              required: false
              description: collection of field names you want to search with, fields seperated by '+'
              type: string
              example:
                name+status
            filterValues:
              required: false
              description:  collection of search values, seperated by '+'
              type: string
              example:
                something+A
          responses:
            200:
              body:
                application/json:
                  type: Page
            500:
              body:
                application/json:
                  type: Message
            403:
        post:
          description:
            Push package to machine
          displayName: registerPackage
          queryParameters:
            token: string
          body:
            application/json:
              type: Package
          responses:
            200:
              body:
                application/json:
                  type: Package
            500:
              body:
                application/json:
                  type: Message
            403:
            404:
        /{packageSN}:
          get:
            description: Search package in specified machine
            displayName: findPackageInMachine
            queryParameters:
              token: string
            responses:
              200:
                body:
                  application/json:
                    type: Package
              500:
                body:
                  application/json:
                    type: Message
              404:
              403:
          delete:
            description: Remove package from speicifed machine
            displayName: removePackage
            queryParameters:
              token: string
            responses:
              200:
                body:
                  application/json:
                    type: Package
              500:
                body:
                  application/json:
                    type: Message
              403:
              404:
      /sold:
        get:
          description:
            List sold package in machine
          displayName:
            getSoldPackagesInMachine
          queryParameters:
            token: string
            page:
              description: page index
              type: integer
              required: false
              default: 0
            size:
              description: how many records display in list
              type:        integer
              required:    false
              example:     10
            sort:
              description: sort by field
              type:        string
              required:    false
              example:     "name"
            filterFields:
              required: false
              description: collection of field names you want to search with, fields seperated by '+'
              type: string
              example:
                name+status
            filterValues:
              required: false
              description:  collection of search values, seperated by '+'
              type: string
              example:
                something+A
          responses:
            200:
              body:
                application/json:
                  type: Page
            500:
              body:
                application/json:
                  type: Message
            403:
            404:
        /{packageSN}:
          post:
            description:
              Move the package to sold history after client sell it out
            displayName: sellPackage
            queryParameters:
              token: string
            responses:
              200:
                body:
                  application/json:
                    type: Package
              500:
                body:
                  application/json:
                    type: Message
              403:
              404:
          get:
            description: Search package in specified machine
            displayName: findPackageInMachine
            queryParameters:
              token: string
            responses:
              200:
                body:
                  application/json:
                    type: Package
              500:
                body:
                  application/json:
                    type: Message
              403:
              404:
